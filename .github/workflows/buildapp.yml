name: CMake Build (Multi-Platform)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install CMake on Linux
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y cmake

      - name: Install CMake on macOS
        if: matrix.os == 'macos-latest'
        run: brew install cmake

      - name: Clean build directory (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          if [ -d build ]; then
            rm -rf build
          fi
        shell: bash

      - name: Clean build directory (Windows)
        if: runner.os == 'Windows'
        run: |
          if (Test-Path build) { Remove-Item -Recurse -Force build }
        shell: powershell
        
      - name: Configure CMake (BOO)
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
      
      - name: Build with CMake :Pleading:
        run: cmake --build build --config Release
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: MinecraftProfileCreator (${{ matrix.os == 'windows-latest' && 'windows' || matrix.os == 'macos-latest' && 'mac' || 'linux' }})
          path: |
            *


